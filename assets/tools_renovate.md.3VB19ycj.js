import{_ as i,c as s,a0 as e,o as t}from"./chunks/framework.D-WqjATM.js";const d=JSON.parse('{"title":"Renovate","description":"","frontmatter":{},"headers":[],"relativePath":"tools/renovate.md","filePath":"tools/renovate.md"}'),n={name:"tools/renovate.md"};function l(h,a,o,r,p,k){return t(),s("div",null,a[0]||(a[0]=[e(`<h1 id="renovate" tabindex="-1">Renovate <a class="header-anchor" href="#renovate" aria-label="Permalink to &quot;Renovate&quot;">​</a></h1><p>Инструмент по автоматическому обновлению зависимостей в репозитории</p><h2 id="зачем-нужен-этот-инструмент" tabindex="-1">Зачем нужен этот инструмент? <a class="header-anchor" href="#зачем-нужен-этот-инструмент" aria-label="Permalink to &quot;Зачем нужен этот инструмент?&quot;">​</a></h2><ol><li>Поддерживаем проект в актуальном состоянии Не приведем его к состоянию, когда обновление какой-либо зависимости станет невозможным из-за того, что это обновление потребует обновления других зависимостей, сломается обратная совместимость и проект перестанет работать.</li><li>Безопасность. Менее вероятно что актуальные зависимости содержат известные уязвимости</li></ol><h2 id="почему-именно-этот-инструмент" tabindex="-1">Почему именно этот инструмент? <a class="header-anchor" href="#почему-именно-этот-инструмент" aria-label="Permalink to &quot;Почему именно этот инструмент?&quot;">​</a></h2><ol start="3"><li>Работает на многих платформах (gitlab, github, ...)</li><li>Много звезд на github, хорошая поддержка</li><li>Этот инструмент используется во многих известных проектах. Например vuejs</li></ol><h2 id="renovate-локально-для-проверки-конфига" tabindex="-1">Renovate локально для проверки конфига <a class="header-anchor" href="#renovate-локально-для-проверки-конфига" aria-label="Permalink to &quot;Renovate локально для проверки конфига&quot;">​</a></h2><ol start="6"><li><code>npm install -g renovate</code></li><li>Перейти в репозиторий, запустить команду <code>RENOVATE_CONFIG_FILE=renovate.json renovate-config-validator</code></li></ol><h2 id="renovate-локально-для-проверки-зависимостеи-репозитория" tabindex="-1">Renovate локально для проверки зависимостей репозитория <a class="header-anchor" href="#renovate-локально-для-проверки-зависимостеи-репозитория" aria-label="Permalink to &quot;Renovate локально для проверки зависимостей репозитория&quot;">​</a></h2><ol start="8"><li><code>npm install -g renovate</code></li><li>GITHUB_COM_TOKEN=... RENOVATE_TOKEN=... renovate --platform=gitlab путь до репозитория</li></ol><p>GITHUB_COM_TOKEN - токен из github, любой, можно даже без прав. Нужен, чтобы changelog по зависимостям подтягивать</p><p>RENOVATE_TOKEN - в данном случае это access token из gitlab с правами api, read_user, write_repository</p><p>В конце указываем путь до репозитория</p><h2 id="renovate-на-github" tabindex="-1">Renovate на github <a class="header-anchor" href="#renovate-на-github" aria-label="Permalink to &quot;Renovate на github&quot;">​</a></h2><ol><li>Устанавливаем <a href="https://github.com/apps/renovate" target="_blank" rel="noreferrer">https://github.com/apps/renovate</a></li><li>Даем доступ приложению к нужным репозиториям</li><li>Заходим в эти репозитории, там должны были создаться мр, которые конфигурируют renovate. Мерджим ее</li><li>Дополнительно настраиваем конфиг. &quot;rangeStrategy&quot;: &quot;bump&quot; (для того чтобы package.json обновлялся) и assignees.</li><li>После установки приложения также есть ui, в котором можно посмотреть репозитории и джобы. <a href="https://developer.mend.io/github/upikoth" target="_blank" rel="noreferrer">https://developer.mend.io/github/upikoth</a></li><li>Создана issue, которая показывает какие зависимости нужно обновить</li><li>Запустить сканирование можно из issue или из ui. Также можно настроить периодический запуск из конфига renovate</li><li>По умолчанию запускается при изменении в основной ветке</li></ol><h2 id="renovate-на-gitlab" tabindex="-1">Renovate на gitlab <a class="header-anchor" href="#renovate-на-gitlab" aria-label="Permalink to &quot;Renovate на gitlab&quot;">​</a></h2><p>В гитлабе можно пайплайны по расписанию запускать: ci/cd -&gt; schedules. Можно сделать запуск периодическим</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">renovate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	variables</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">		GITHUB_COM_TOKEN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;...&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">		RENOVATE_TOKEN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;...&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">		RENOVATE_AUTODISCOVER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;false&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">		RENOVATE_GIT_AUTHOR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Renovate Bot &lt;bot@renovateapp.com&gt;&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">		RENOVATE_PLATFORM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;gitlab&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">renovate/renovate:latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		- </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">renovate путь до репозитория</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">	only</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		- </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">schedules</span></span></code></pre></div><p>GITHUB_COM_TOKEN - токен из github, любой, можно даже без прав. Нужен, чтобы changelog по зависимостям подтягивать</p><p>RENOVATE_TOKEN - в данном случае это access token из gitlab с правами api, read_user, write_repository</p>`,20)]))}const g=i(n,[["render",l]]);export{d as __pageData,g as default};
