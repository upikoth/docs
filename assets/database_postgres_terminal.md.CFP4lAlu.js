import{_ as e,c as t,o as a,a2 as s}from"./chunks/framework.BSzcDgWL.js";const u=JSON.parse('{"title":"Работа из командной строки","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgres/terminal.md","filePath":"database/postgres/terminal.md"}'),r={name:"database/postgres/terminal.md"},o=s('<h1 id="работа-из-команднои-строки" tabindex="-1">Работа из командной строки <a class="header-anchor" href="#работа-из-команднои-строки" aria-label="Permalink to &quot;Работа из командной строки&quot;">​</a></h1><p>Установка postgres</p><p>с оф сайта</p><p>Создание и запуск сервера</p><p>systemctl start postgresql systemctl stop postgresql</p><p>su postgres psql</p><p>Создание базы данных</p><p>CREATE DATABASE yourdbname; CREATE USER youruser WITH ENCRYPTED PASSWORD &#39;yourpass&#39;; GRANT ALL PRIVILEGES ON DATABASE yourdbname TO youruser; GRANT ALL PRIVILEGES ON SCHEMA schema_name TO role_name;</p><p>Использование миграций</p><p>brew install golang-migrate</p><p>migrate create -ext sql -dir migrations -seq create_users_table</p><p>migrate -path migrations -database &quot;postgresql://localhost:5432/example?sslmode=disable&quot; -verbose up</p><p><a href="https://github.com/golang-migrate/migrate" target="_blank" rel="noreferrer">Пакет для управления миграциями</a></p>',13),p=[o];function l(n,i,_,m,c,d){return a(),t("div",null,p)}const h=e(r,[["render",l]]);export{u as __pageData,h as default};
